// * * * * * * * * * * * *
// Plugins
// * * * * * * * * * * * *

plugins {
    id 'groovy'
    id 'java-gradle-plugin'

    // Publishing publicly
    id 'com.gradle.plugin-publish' version '0.9.10'

    // Publishing to Artifactory
    id 'maven-publish'
	id 'eclipse'
}

// * * * * * * * * * * * *
// Dependencies
// * * * * * * * * * * * *

repositories {
    jcenter()
}

dependencies {
    implementation gradleApi()
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4+'
    implementation("org.yaml:snakeyaml:1.17")
    implementation('com.github.spullara.mustache.java:compiler:0.9.5')
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'
    implementation 'org.codehaus.groovy:groovy-all:3.0.7'
}

// * * * * * * * * * * * *
// Project configuration
// * * * * * * * * * * * *

project.description     = 'Demo plugin to use as a starting point for custom plugin development'
project.group           = 'com.leonardo.rocha'
project.version         = '0.1.0'

project.ext.name        = 'auto-value-yaml'
project.ext.pluginId    = 'com.leonardo.rocha.AutoValueYamlPlugin'
sourceCompatibility = 1.8
// Configuration for: java-gradle-plugin
gradlePlugin {
    plugins {
        simplePlugin {
            id = project.pluginId
            implementationClass = 'com.leonardo.rocha.AutoValueYamlPlugin'
        }
    }
}

publishing {
    publications {
        pluginPublication (MavenPublication) {
            from        components.java
            groupId     project.group
            artifactId  project.name
            version     project.version
        }
    }
    repositories {
        maven {
            url mavenRepo
            credentials {
                username mavenUser
                password mavenPassword
            }
        }
    }
}

eclipse {
	classpath {
		defaultOutputDir = file("build")
		file.whenMerged {
			entries.each { entry ->
				if(entry.kind == 'src' && entry.hasProperty('output')) {
					entry.output = entry.output.replace('bin/', "build/classes/java/")
				}
			}
		}
	}
}

